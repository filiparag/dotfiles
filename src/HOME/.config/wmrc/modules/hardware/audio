#!/bin/sh

export WMRC_DEPENDENCIES='pactl'
export WMRC_LIBRARIES='notify'

WMRC_NOTIFICATION_TIMEOUT="${WMRC_NOTIFICATION_TIMEOUT:-1000}" #milliseconds
WMRC_VOLUME_STEP="${WMRC_VOLUME_STEP:-1}"

default_source() {
    pactl info | grep 'Default Source:' | sed 's/.*: //'
}

default_sink() {
    pactl info | grep 'Default Sink:' | sed 's/.*: //'
}

reverse_sink_channels() {
	_default_sink="$(pactl get-default-sink)"
	_sink_name="${1:-$_default_sink}"
	_reverse_sink_name="${_sink_name}-reversed"
	if echo "${_default_sink}" | grep -q '\-reversed$'; then
		info 'Reverse channel sink in use' "${_reverse_sink_name}"
		return 0
	elif ! pacmd list-sinks | grep -q "name: <${_sink_name}>"; then
		warn 'Sink does not exist' "${_sink_name}"
		return 0
	elif pacmd list-sinks | grep -q "name: <${_reverse_sink_name}>\|device.master_device = \"${_sink_name}\""; then
		info 'Reverse channel sink already exists' "${_reverse_sink_name}"
	else
		info 'Creating reverse channel sink' "${_sink_name}"
		if ! pactl load-module module-remap-sink \
			sink_name="${_reverse_sink_name}" \
			master="${_sink_name}" \
			channels=2 \
			master_channel_map=front-right,front-left \
			channel_map=front-left,front-right; then
			error 'Unable to create reverse channel sink' "${_sink_name}"
			return 1
		fi
	fi
	info 'Set default sink' "${_reverse_sink_name}"
	pactl set-default-sink "${_reverse_sink_name}"
}

speakers_volume_increase() {
	pactl set-sink-volume "$(default_sink)" "+${1:-$WMRC_VOLUME_STEP}%"
}

speakers_volume_decrease() {
	pactl set-sink-volume "$(default_sink)" "-${1:-$WMRC_VOLUME_STEP}%"
}

microphone_toggle_mute() {
    pactl set-source-mute "$(default_source)" "${1:-toggle}"
	_muted="$(pactl get-source-mute "$(default_source)" | cut -d' ' -f2)"
	if [ "$_muted" = 'yes' ]; then
		notify -t "$WMRC_NOTIFICATION_TIMEOUT" -u low -i microphone-sensitivity-muted 'Microphone muted'
	elif [ "$_muted" = 'no' ]; then
		notify -t "$WMRC_NOTIFICATION_TIMEOUT" -u low -i microphone-sensitivity-high 'Microphone active'
	fi
}

speakers_toggle_mute() {
    pactl set-sink-mute "$(default_sink)" "${1:-toggle}"
	_muted="$(pactl get-sink-mute "$(default_sink)" | cut -d' ' -f2)"
	if [ "$_muted" = 'yes' ]; then
		notify -t "$WMRC_NOTIFICATION_TIMEOUT" -u low -i audio-volume-muted 'Speakers muted'
	elif [ "$_muted" = 'no' ]; then
		notify -t "$WMRC_NOTIFICATION_TIMEOUT" -u low -i audio-volume-high 'Speakers active'
	fi
}

init() {
	reverse_sink_channels 'bluez_sink.FC_E8_06_D1_ED_C5.a2dp_sink' || true
}
