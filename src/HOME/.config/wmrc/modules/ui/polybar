#!/bin/sh

export WMRC_DEPENDENCIES='polybar pgrep xrandr'

PID_FILE="/tmp/polybar@$(whoami)${DISPLAY}"

start() {

  if [ -f "$PID_FILE" ]; then
    kill -0 "$(cat "$PID_FILE")" && \
    {
      error "Polybar is already running!"
      exit 2

    }
  fi

  local WLP
  local ENP
  local MNT
  local MONITORS
  local M_PRIMARY
  local M_ALL
  local M

  WLP="$(ip -o link show | awk -F': ' '{print $2}' | grep -E '^(wlp|wlan)')"
	ENP="$(ip -o link show | awk -F': ' '{print $2}' | grep -E '^(enp|end|eth)')"
	MNT="$(lsblk | awk '/\//{printf "mount-"NR-2" = "$7"\n"}')"

  M_PRIMARY="$(xrandr --query | grep " primary" | cut -d" " -f1)"
  M_ALL="$(xrandr --query | grep " connected" | cut -d" " -f1)"

  case "$2" in
    primary)
      MONITORS="$M_PRIMARY";;
    ""|all)
      MONITORS="$M_ALL";;
    *)
      for M in $(echo "$@" | cut -d' ' -f2- | sed "s/ /\n/g"); do
        echo "$M_ALL" | grep -q "^$M$" && \
          MONITORS="$MONITORS $M" || \
          error "Monitor '$M' is not connected!"
      done;;
  esac

  for M in $MONITORS; do

    WIDTH="$(xrandr --listmonitors | perl -nle "/$M (\d+)/ && print \$1")"
    HEIGHT="$(xrandr --listmonitors | perl -nle "/$M \d+\/\d+x(\d+)/ && print \$1")"

    if [ "$M" = "$M_PRIMARY" ]; then
      if [ "$WIDTH" -ge 3440 ]; then
        MOD_L="bspwm window"
        MOD_C="playerctl"
        MOD_R="battery wireless wired cpu memory fan temperature filesystem pulseaudio keyboard date"
      elif [ "$WIDTH" -ge 1920 ]; then
        MOD_L="bspwm window"
        MOD_C=""
        MOD_R="battery wireless wired cpu memory fan temperature filesystem pulseaudio keyboard date"
      else
        MOD_L="bspwm"
        MOD_C=""
        MOD_R="battery wireless wired cpu memory fan temperature pulseaudio keyboard date"
      fi
      [ "$WIDTH" -ge 1920 ] && \
      NOTIF="right"
    else
      MOD_L="bspwm"
      MOD_C="playerctl"
      MOD_R="updates pulseaudio host date"
      NOTIF="none"
    fi

    MONITOR="$M" WLP="$WLP" ENP="$ENP" MNT="$MNT" ML="$MOD_L" MC="$MOD_C" MR="$MOD_R" NOTIF="$NOTIF" polybar --reload "main" &

    echo "$!" > "$PID_FILE"

  done

}

stop() {

  [ -z "$(pgrep -u "$(whoami)" polybar)" ] && \
    error "Polybar is not running!"

  # killall -u "$(whoami)" -9 polybar > /dev/null
  cat "$PID_FILE" | xargs kill -9
  rm -f "$PID_FILE"

}
